name: Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: |
          sudo bash -c "echo \"deb http://cz.archive.ubuntu.com/ubuntu impish main\" >> /etc/apt/sources.list"
          sudo apt update
          sudo apt install clang make pkg-config libgtk-4-dev libluajit-5.1-dev
      
      - name: Build
        run: make all
        env:
          CC: clang
          CXX: clang++
          
      - name: Archive
        run: |
          tar -cf csa.tar csa
          tar -cf testbench.tar testbench
      
      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: csa-linux
          path: csa.tar
      
      - name: Upload test executable
        uses: actions/upload-artifact@v2
        with:
          name: csa-testbench-linux
          path: testbench.tar

  test-linux:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: |
          sudo bash -c "echo \"deb http://cz.archive.ubuntu.com/ubuntu impish main\" >> /etc/apt/sources.list"
          sudo apt update
          sudo apt install libgtk-4-bin luajit
      
      - name: Download test executable
        uses: actions/download-artifact@v2
        with:
          name: csa-testbench-linux
      
      - name: Extract test executable
        run: tar -xf testbench.tar
      
      - name: Run tests
        run: |
          gtk4-broadwayd & # using broadway backend since otherwise GTK is unable to connect to a display
          GDK_BACKEND=broadway ./testbench
  
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: brew install gtk4 luajit
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
            
      - name: Build
        run: make all
        env:
          CC: clang
          CXX: clang++
      
      - name: Archive
        run: |
          tar -cf Captain\ Sonar\ Assist.app.tar Captain\ Sonar\ Assist.app
          tar -cf testbench.tar testbench
      
      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: csa-macos
          path: Captain Sonar Assist.app.tar
      
      - name: Upload test executable
        uses: actions/upload-artifact@v2
        with:
          name: csa-testbench-macos
          path: testbench.tar

  test-macos:
    runs-on: macos-latest
    needs: build-macos
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: brew install gtk4 luajit
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
      
      - name: Download test executable
        uses: actions/download-artifact@v2
        with:
          name: csa-testbench-macos
          
      - name: Extract test executable
        run: tar -xf testbench.tar
      
      - name: Run tests
        run: ./testbench
  
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: |
            mingw-w64-x86_64-clang
            mingw-w64-x86_64-make
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-gtk4
            mingw-w64-x86_64-luajit
            
      - name: Build
        run: mingw32-make all
        env:
          CC: clang
          CXX: clang++
      
      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: csa-windows
          path: csa.exe
      
      - name: Upload test executable
        uses: actions/upload-artifact@v2
        with:
          name: csa-testbench-windows
          path: testbench.exe

  test-windows:
    runs-on: windows-latest
    needs: build-windows
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: |
            mingw-w64-x86_64-gtk4
            mingw-w64-x86_64-luajit
      
      - name: Download test executable
        uses: actions/download-artifact@v2
        with:
          name: csa-testbench-windows
      
      - name: Run tests
        run: ./testbench
